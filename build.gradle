plugins {
    id 'io.codearte.nexus-staging' version '0.11.0'
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

dependencies {
    implementation "de.otto:hmac-auth-server:3.0.0"
    implementation "org.springframework.boot:spring-boot:3.0.7"

    testImplementation "org.testng:testng:6.9.6"
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
}

nexusStaging {
    username=sonatypeUsername
    password=sonatypePassword
    packageGroup='de.otto'
}

allprojects {
    version = '3.0.0-SNAPSHOT'
    group = 'de.otto.edison'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

}

jar {
    manifest.attributes provider: 'gradle'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'edison-hmac'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'edison-hmac'
                description = 'A library used at otto.de to integrate hmac into edison microserivces.'
                url = 'https://github.com/otto-de/edison-hmac'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'gsteinacker'
                        name = 'Guido Steinacker'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:otto-de/edison-hmac.git'
                    developerConnection = 'scm:git@github.com:otto-de/edison-hmac.git'
                    url = 'https://github.com/otto-de/edison-hmac'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            if (project.debugUpload) {
                releasesRepoUrl = "$buildDir/repos/releases"
                snapshotsRepoUrl = "$buildDir/repos/snapshots"
            } else {
                credentials {
                    username = sonatypeUsername
                    password = sonatypePassword
                }
            }
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
